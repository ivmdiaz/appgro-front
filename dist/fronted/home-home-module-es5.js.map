{"version":3,"sources":["webpack:///src/app/home/components/home-proveedor/home-proveedor.component.ts","webpack:///src/app/home/components/home-proveedor/home-proveedor.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/components/home-administrador/home-administrador.component.ts","webpack:///src/app/home/components/home-administrador/home-administrador.component.html","webpack:///src/app/home/components/venta-dialog/venta-dialog.component.ts","webpack:///src/app/home/components/venta-dialog/venta-dialog.component.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/components/usuario-dialog/usuario-dialog.component.ts","webpack:///src/app/home/components/usuario-dialog/usuario-dialog.component.html","webpack:///src/app/home/services/home.service.ts"],"names":["HomeProveedorComponent","homeService","dialog","toastr","displayedColumns","obtenerCompras","pipe","subscribe","data","dataSource","entidad","paginator","sort","error","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","item","dialogRef","open","width","maxHeight","afterClosed","result","applyFilter","height","minHeight","routes","path","component","canActivate","HomeRoutingModule","forChild","HomeAdministradorComponent","mostrarHabilitados","mostrarInhabilitados","obtenerUsuarios","dataSourceHabilitados","ds","estado","dataSourceInhabilitados","nombreCompleto","primerApellido","segundoApellido","perfiles","map","p","nombre","toString","idPerfil","indexOf","PERFIL_ADMINISTRADOR","confirmado","eliminarUsuario","idUsuario","success","mensaje","habilitarUsuario","VentaDialogComponent","dialogo","stopPropagation","_matExpansionPanel","close","entregarPedido","idCompra","errorRegister","HomeModule","UsuarioDialogComponent","formBuilder","id","userPerfil","usuarioForm","group","nombres","correo","celular","pefil","required","filterPerfiles","f","valueChanges","name","_filter","slice","options","option","controls","valid","actualizarPerfil","onSubmit","HomeService","http","url","apiProveedorUrl","get","exitoso","Error","put","apiAdministradorUrl","usuario","perfil","post"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["import { VentaDialogComponent } from '../venta-dialog/venta-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HistoricoComprasModel } from \"../../models/historico-compras.model\";\nimport { HomeService } from \"../../services/home.service\";\nimport { first } from \"rxjs/operators\";\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home-proveedor.component.html',\n  styleUrls: ['./home-proveedor.component.scss', '../../../app.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class HomeProveedorComponent implements AfterViewInit {\n\n  dataSource: MatTableDataSource<HistoricoComprasModel>;\n  displayedColumns = [\n    'compra',\n    'fecha',\n    'estado',\n    'tienda',\n    'usuario',\n    'producto',\n    'cantidad',\n    'total',\n    'acciones'\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private homeService: HomeService,\n    private dialog: MatDialog,\n    private toastr: ToastrService\n  ) { }\n\n  ngAfterViewInit() {\n    this.obtenerCompras();\n  }\n\n  obtenerCompras(){\n    this.homeService.obtenerCompras().pipe(first())\n    .subscribe(\n      data => {\n        this.dataSource = new MatTableDataSource(data.entidad);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      error => {\n        this.toastr.error(error);\n      });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  verDetalleCompra(item: HistoricoComprasModel) {\n    const dialogRef = this.dialog.open(VentaDialogComponent, {\n      width: '120vh',\n      maxHeight: '90vh',\n      data: item\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result && result.data){\n        this.obtenerCompras();\n      }\n    });\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n  <div fxLayout=\"row\">\n    <h2>Productos pendientes por entregar</h2>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n    <div fxLayout=\"column\" fxFlex>\n      <mat-form-field>\n        <mat-label>Filtro</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Papa Pastusa\" #input>\n      </mat-form-field>\n    </div>\n\n    <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 50]\"></mat-paginator>\n    </div>\n\n  </div>\n\n  <div fxLayout=\"row\">\n\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n      <!-- compra Column -->\n      <ng-container matColumnDef=\"compra\">\n        <th mat-header-cell *matHeaderCellDef> Id.</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.idCompra}} </td>\n      </ng-container>\n\n      <!-- fecha Column -->\n      <ng-container matColumnDef=\"fecha\">\n        <th mat-header-cell *matHeaderCellDef> Fecha</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date:\"yyyy-MM-dd HH:mm\"}} </td>\n      </ng-container>\n\n      <!-- estado Column -->\n      <ng-container matColumnDef=\"estado\">\n        <th mat-header-cell *matHeaderCellDef> Estado</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n      </ng-container>\n\n      <!-- tienda Column -->\n      <ng-container matColumnDef=\"tienda\">\n        <th mat-header-cell *matHeaderCellDef> Tienda</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (element.nombreTienda.length>30)? (element.nombreTienda |\n          slice:0:30)+'...':(element.nombreTienda) }}</td>\n      </ng-container>\n\n      <!-- comprador Column -->\n      <ng-container matColumnDef=\"usuario\">\n        <th mat-header-cell *matHeaderCellDef> Comprador</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (element.nombreComprador.length>30)? (element.nombreComprador |\n          slice:0:30)+'...':(element.nombreComprador) }} </td>\n      </ng-container>\n\n      <!-- producto Column -->\n      <ng-container matColumnDef=\"producto\">\n        <th mat-header-cell *matHeaderCellDef> Producto</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (element.nombreProducto.length>30)? (element.nombreProducto |\n          slice:0:30)+'...':(element.nombreProducto) }} </td>\n      </ng-container>\n\n      <!-- cantidad Column -->\n      <ng-container matColumnDef=\"cantidad\">\n        <th mat-header-cell *matHeaderCellDef> Cantidad</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n      </ng-container>\n\n      <!-- total Column -->\n      <ng-container matColumnDef=\"total\">\n        <th mat-header-cell *matHeaderCellDef> Total</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-button (click)=\"verDetalleCompra(element)\">\n            <mat-icon>search</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"8\">No tiene productos por entregar en el momento</td>\n      </tr>\n\n    </table>\n  </div>\n</div>","import { HomeAdministradorComponent } from './components/home-administrador/home-administrador.component';\nimport { AuthGuard } from './../commons/helpers/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeProveedorComponent } from './components/home-proveedor/home-proveedor.component'\n\nconst routes: Routes = [\n  {\n    path: \"proveedor\",\n    component: HomeProveedorComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"administrador\",\n    component: HomeAdministradorComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgxSpinnerService } from 'ngx-spinner';\nimport { ConstantesUtil } from './../../../commons/helpers/constantes-util';\nimport { ConfirmDialogComponent } from './../../../commons/components/confirm-dialog/confirm-dialog.component';\nimport { UsuarioDialogComponent } from './../usuario-dialog/usuario-dialog.component';\nimport { HomeService } from './../../services/home.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Usuario } from './../../../public/models/usuario.model';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { first } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-home-administrador',\n  templateUrl: './home-administrador.component.html',\n  styleUrls: ['./home-administrador.component.scss', '../../../app.component.scss']\n})\nexport class HomeAdministradorComponent implements OnInit {\n\n  //VIEW: SELECCIONAR\n  mostrarHabilitados : boolean = true;\n  mostrarInhabilitados : boolean = false;\n\n  dataSourceHabilitados: MatTableDataSource<Usuario>;\n  dataSourceInhabilitados: MatTableDataSource<Usuario>;\n  \n  displayedColumns = [\n    'nombreCompleto',\n    'correo',\n    'celular',\n    'perfiles',\n    'acciones'\n  ];\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    private homeService: HomeService,\n    private dialog: MatDialog,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.obtenerUsuarios();\n  }\n\n  obtenerUsuarios(){\n    this.homeService.obtenerUsuarios()\n    .subscribe(\n      data => {\n        this.dataSourceHabilitados = new MatTableDataSource(data.filter(ds => ds.estado === 'HABILITADO'));\n        if(this.dataSourceHabilitados.paginator){\n          this.dataSourceHabilitados.paginator = this.paginator;\n        }\n        if(this.dataSourceHabilitados.sort){\n          this.dataSourceHabilitados.sort = this.sort;\n        }\n\n        this.dataSourceInhabilitados = new MatTableDataSource(data.filter(ds => ds.estado !== 'HABILITADO'));\n        \n        if(this.dataSourceInhabilitados.paginator){\n          this.dataSourceInhabilitados.paginator = this.paginator;\n        }\n        if(this.dataSourceInhabilitados.sort){\n          this.dataSourceInhabilitados.sort = this.sort;\n        }\n      },\n      error => {\n        this.toastr.error(error);\n      });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    \n    this.dataSourceHabilitados.filter = filterValue.trim().toLowerCase();\n    this.dataSourceInhabilitados.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSourceHabilitados.paginator) {\n      this.dataSourceHabilitados.paginator.firstPage();\n    }\n\n    if (this.dataSourceInhabilitados.paginator) {\n      this.dataSourceInhabilitados.paginator.firstPage();\n    }\n  }\n\n  getNombreCompleto(item:Usuario): string{\n    return (item.nombreCompleto ? item.nombreCompleto + \" \" : \"\")\n      + (item.primerApellido ? item.primerApellido + \" \" : \"\")\n      + (item.segundoApellido ? item.segundoApellido  : \"\")\n  }\n\n  getPerfiles(item: Usuario): string{\n    return item.perfiles.map(p => p.nombre).toString();\n  }\n\n\n  isPerfilAdministrador(item: Usuario): Boolean {\n    return item.perfiles.map(p => p.idPerfil.toString()).indexOf(ConstantesUtil.PERFIL_ADMINISTRADOR) !== -1;\n  }\n\n  edit(item: Usuario){\n    const dialogRef = this.dialog.open(UsuarioDialogComponent, {\n      width: '120vh',\n      maxHeight: '90vh',\n      data: item\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result && result.data){\n        this.obtenerUsuarios();\n      }\n    });\n  }\n\n  delete(item: Usuario){\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de inhabilitar el usuario (${item.nombreCompleto})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.homeService.eliminarUsuario(item.idUsuario).subscribe(\n            data => {\n              this.toastr.success(data.mensaje);\n              this.obtenerUsuarios();\n            },\n            error => {\n              this.toastr.error(error);\n            });\n        }\n      });\n  }\n\n\n  habilitar(item: Usuario){\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de habilitar el usuario (${item.nombreCompleto})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.homeService.habilitarUsuario(item.idUsuario).subscribe(\n            data => {\n              this.toastr.success(data.mensaje);\n              this.obtenerUsuarios();\n            },\n            error => {\n              this.toastr.error(error);\n            });\n        }\n      });\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n  <section class=\"example-section\">\n    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"mostrarHabilitados\">Usuarios habilitados</mat-checkbox>\n    <mat-checkbox class=\"example-margin\" [(ngModel)]=\"mostrarInhabilitados\">Usuarios inhabilitados</mat-checkbox>\n  </section>\n\n  <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n    <div fxLayout=\"column\" fxFlex>\n      <mat-form-field>\n        <mat-label>Filtro</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Pepito Pérez\" #input>\n      </mat-form-field>\n    </div>\n\n    <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n      <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n    </div>\n\n  </div>\n\n  <div fxLayout=\"row\" *ngIf=\"mostrarHabilitados\">\n    <h2>Usuarios habilitados</h2>\n  </div>\n\n  <div fxLayout=\"row\" *ngIf=\"mostrarHabilitados\">\n\n    <table mat-table [dataSource]=\"dataSourceHabilitados\" matSort class=\"mat-elevation-z8\">\n\n\n      <!-- nombreCompleto Column -->\n      <ng-container matColumnDef=\"nombreCompleto\">\n        <th mat-header-cell *matHeaderCellDef> Nombre</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (getNombreCompleto(element).length>50)? (getNombreCompleto(element) |\n          slice:0:50)+'...':(getNombreCompleto(element)) }}</td>\n      </ng-container>\n\n      <!-- Correo Column -->\n      <ng-container matColumnDef=\"correo\">\n        <th mat-header-cell *matHeaderCellDef> Correo</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (element.correo.length>50)? (element.correo |\n          slice:0:50)+'...':(element.correo) }} </td>\n      </ng-container>\n\n      <!-- Celular Column -->\n      <ng-container matColumnDef=\"celular\">\n        <th mat-header-cell *matHeaderCellDef> Celular</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.celular}} </td>\n      </ng-container>\n\n      <!-- Celular Column -->\n      <ng-container matColumnDef=\"perfiles\">\n        <th mat-header-cell *matHeaderCellDef> Perfiles</th>\n        <td mat-cell *matCellDef=\"let element\"> {{getPerfiles(element)}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-button (click)=\"edit(element)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-button (click)=\"delete(element)\">\n            <mat-icon *ngIf=\"!isPerfilAdministrador(element)\">delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"5\">No hay usuarios habilitados hasta el momento</td>\n      </tr>\n\n    </table>\n  </div>\n\n  <br/>\n\n  <div fxLayout=\"row\" *ngIf=\"mostrarInhabilitados\">\n    <h2>Usuarios inhabilitados</h2>\n  </div>\n\n\n  <div fxLayout=\"row\" *ngIf=\"mostrarInhabilitados\">\n\n    <table mat-table [dataSource]=\"dataSourceInhabilitados\" matSort class=\"mat-elevation-z8\">\n\n\n      <!-- nombreCompleto Column -->\n      <ng-container matColumnDef=\"nombreCompleto\">\n        <th mat-header-cell *matHeaderCellDef> Nombre</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (getNombreCompleto(element).length>50)? (getNombreCompleto(element) |\n          slice:0:50)+'...':(getNombreCompleto(element)) }}</td>\n      </ng-container>\n\n      <!-- Correo Column -->\n      <ng-container matColumnDef=\"correo\">\n        <th mat-header-cell *matHeaderCellDef> Correo</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ (element.correo.length>50)? (element.correo |\n          slice:0:50)+'...':(element.correo) }} </td>\n      </ng-container>\n\n      <!-- Celular Column -->\n      <ng-container matColumnDef=\"celular\">\n        <th mat-header-cell *matHeaderCellDef> Celular</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.celular}} </td>\n      </ng-container>\n\n      <!-- Celular Column -->\n      <ng-container matColumnDef=\"perfiles\">\n        <th mat-header-cell *matHeaderCellDef> Perfiles</th>\n        <td mat-cell *matCellDef=\"let element\"> {{getPerfiles(element)}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-button (click)=\"habilitar(element)\">\n            <mat-icon>undo</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"5\">No hay usuarios inhabilitados hasta el momento</td>\n      </tr>\n\n    </table>\n  </div>\n</div>","import { ToastrService } from 'ngx-toastr';\nimport { HomeService } from './../../services/home.service';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { HistoricoComprasModel } from './../../models/historico-compras.model';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { ConfirmDialogComponent } from 'src/app/commons/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-venta-dialog',\n  templateUrl: './venta-dialog.component.html',\n  styleUrls: ['./venta-dialog.component.scss']\n})\nexport class VentaDialogComponent implements OnInit {\n\n  @ViewChild('matExpansionPanel') _matExpansionPanel: any\n\n  constructor(\n    private homeService:HomeService,\n    private toastr: ToastrService,\n    public dialogo: MatDialogRef<VentaDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: HistoricoComprasModel,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  expandPanel(event): void {\n    event.stopPropagation(); // Preventing event bubbling\n    this._matExpansionPanel.close()\n  }\n\n  onSubmit(): void {\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de entregar el producto? Esta acción no se puede revertir.`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.entregarPedido();\n        }\n      });\n  }\n\n  entregarPedido():void {\n    this.homeService.entregarPedido(this.data.idCompra).subscribe(\n      data => {\n        this.toastr.success(data.mensaje);\n        this.dialogo.close({data:true});\n      },\n      errorRegister => {\n        this.toastr.error(errorRegister);\n      }\n    );\n  }\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center\" style=\"margin-bottom:20px\">\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center\">\n        <h2>Compra #{{data.idCompra}}</h2>\n    </div>\n\n    <mat-accordion multi>\n        <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Compra\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <table class=\"table-info\">\n\n                 \n                <tr>\n                    <td class=\"column-title\">Nombre Cliente:</td>\n                    <td class=\"column-value\">{{data.nombreComprador}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Celular Cliente:</td>\n                    <td class=\"column-value\">{{data.celularComprador}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Correo Cliente:</td>\n                    <td class=\"column-value\">{{data.correoComprador}}</td>\n                </tr>\n\n                <br/>\n\n                <tr>\n                    <td class=\"column-title\">Estado:</td>\n                    <td class=\"column-value\">{{data.estado}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Fecha de compra:</td>\n                    <td class=\"column-value\">{{data.fecha | date:\"yyyy-MM-dd HH:mm\"}}</td>\n                </tr>\n                <tr *ngIf=\"data.aclaracion\">\n                    <td class=\"column-title\">Aclaración de entrega:</td>\n                    <td class=\"column-value\">{{data.aclaracion}}</td>\n                </tr>\n\n                <br/>\n\n                <tr>\n                    <td class=\"column-title\">Fecha de entrega:</td>\n                    <td class=\"column-value\">{{data.fechaEntrega | date:\"yyyy-MM-dd\"}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Ubicación de entrega:</td>\n                    <td class=\"column-value\">{{data.direccion}} ({{data.barrio}})</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Ciudad de entrega:</td>\n                    <td class=\"column-value\">{{data.ciudad}}</td>\n                </tr>\n                <tr *ngIf=\"data.direccionDatosAdicionales\">\n                    <td class=\"column-title\">Datos adicionales de entrega:</td>\n                    <td class=\"column-value\">{{data.direccionDatosAdicionales}}</td>\n                </tr>               \n\n            </table>\n\n        </mat-expansion-panel>\n\n        <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Producto\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <table class=\"table-info\">\n                <tr>\n                    <td class=\"column-title\">Tienda:</td>\n                    <td class=\"column-value\">{{data.nombreTienda}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Producto:</td>\n                    <td class=\"column-value\">{{data.nombreProducto}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Cantidad:</td>\n                    <td class=\"column-value\">{{data.cantidad}} ({{data.unidadProducto}})</td>\n                </tr>\n            </table>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel [expanded]=\"false\" #matExpansionPanel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Total\n                </mat-panel-title>\n                <mat-panel-description fxLayoutAlign=\"end\">\n                    {{data.total | currency}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <table class=\"table-info\">\n                <tr>\n                    <td class=\"column-title\">{{data.nombreProducto}} x {{data.cantidad}}:</td>\n                    <td class=\"column-value\">{{data.precioTotal | currency}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Costo del flete:</td>\n                    <td class=\"column-value\">{{data.flete | currency}}</td>\n                </tr>\n                <tr>\n                    <td class=\"column-title\">Total:</td>\n                    <td class=\"column-value\">{{data.total | currency}}</td>\n                </tr>\n            </table>\n        </mat-expansion-panel>\n    </mat-accordion>\n\n    <div fxLayoutAlign=\"center\" style=\"margin-top:20px\" *ngIf=\"data.estado === 'COMPRADO'\">\n        <button style=\"width:100%\" mat-raised-button (click)=\"onSubmit()\" color=\"primary\">Entregar pedido</button>\n    </div>\n   \n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeProveedorComponent } from './components/home-proveedor/home-proveedor.component';\nimport {CommonsModule} from \"../commons/commons.module\";\nimport {MaterialModule} from \"../material/material.module\";\nimport { VentaDialogComponent } from './components/venta-dialog/venta-dialog.component';\nimport { HomeAdministradorComponent } from './components/home-administrador/home-administrador.component';\nimport { UsuarioDialogComponent } from './components/usuario-dialog/usuario-dialog.component';\n\n\n@NgModule({\n  declarations: [HomeProveedorComponent, VentaDialogComponent, HomeAdministradorComponent, UsuarioDialogComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    CommonsModule,\n    MaterialModule,\n  ]\n})\nexport class HomeModule { }\n","import { HomeService } from './../../services/home.service';\nimport { NombreIdModel } from './../../../commons/models/nombre-id.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { startWith } from 'rxjs/operators';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Usuario } from './../../../public/models/usuario.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { RequiredMatch } from 'src/app/commons/validators/required-match.validator';\n\n@Component({\n  selector: 'app-usuario-dialog',\n  templateUrl: './usuario-dialog.component.html',\n  styleUrls: ['./usuario-dialog.component.scss']\n})\nexport class UsuarioDialogComponent implements OnInit {\n\n  usuarioForm: FormGroup;\n\n  filterPerfiles: Observable<NombreIdModel[]>;\n  perfiles: NombreIdModel[] = [\n    {\n      id: 1,\n      nombre: \"Administrador\"\n    },\n    {\n      id: 2,\n      nombre: \"Comprador\"\n    },\n    {\n      id: 3,\n      nombre: \"Vendedor\"\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private homeService: HomeService,\n    public dialogo: MatDialogRef<UsuarioDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Usuario\n  ) { }\n\n  ngOnInit(): void {\n\n    const userPerfil: NombreIdModel = {\n      id: this.data.perfiles[0].idPerfil,\n      nombre: this.data.perfiles[0].nombre\n    };\n\n    this.usuarioForm = this.formBuilder.group({\n      nombres: [this.data.nombreCompleto],\n      primerApellido: [this.data.primerApellido],\n      segundoApellido: [this.data.segundoApellido],\n      correo: [this.data.correo],\n      celular: [this.data.celular],\n      pefil: [userPerfil, [Validators.required, RequiredMatch]],\n    });\n\n    this.filterPerfiles = this.f.pefil.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.nombre),\n      map(name => name ? this._filter(name, this.perfiles) : this.perfiles.slice())\n    );\n  }\n\n  private _filter(name: string, options: any[]): any[] {\n    const filterValue = name.toLowerCase();\n    return options.filter(option => option.nombre.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  get f() {\n    return this.usuarioForm.controls;\n  }\n\n  getOptionText(option: any) {\n    if (option) {\n      return option.nombre;\n    }\n  }\n\n\n  onSubmit() {\n    if (this.usuarioForm.valid) {\n      this.homeService.actualizarPerfil(this.data.idUsuario, this.f.pefil.value.id).subscribe(\n        data => {\n          this.toastr.success(data.mensaje);\n          this.dialogo.close({ \"data\": true });\n        },\n        errorRegister => {\n          this.toastr.error(errorRegister);\n        }\n      );\n    }\n  }\n\n}\n\n","<div fxLayout=\"column\" fxLayoutAlign=\"center\">\n\n    <form [formGroup]=\"usuarioForm\" style=\"margin-top:10px\">\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Nombres</mat-label>\n                <input formControlName=\"nombres\" matInput readonly>\n            </mat-form-field>\n        </div>\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Primer apellido</mat-label>\n                <input formControlName=\"primerApellido\" matInput readonly>\n            </mat-form-field>\n        </div>\n\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Segundo apellido</mat-label>\n                <input formControlName=\"segundoApellido\" matInput readonly>\n            </mat-form-field>\n        </div>\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Correo</mat-label>\n                <input formControlName=\"correo\" matInput readonly>\n            </mat-form-field>\n        </div>\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Celular</mat-label>\n                <input formControlName=\"celular\" matInput readonly>\n            </mat-form-field>\n        </div>\n\n        <div fxLayoutAlign=\"center\">\n            <mat-form-field style=\"width:90%\" appearance=\"fill\">\n                <mat-label>Perfil</mat-label>\n                <input matInput autocomplete=\"off\" formControlName=\"pefil\" [matAutocomplete]=\"autoPerfil\">\n                <mat-autocomplete [displayWith]=\"getOptionText\" #autoPerfil=\"matAutocomplete\">\n                    <mat-option *ngFor=\"let option of filterPerfiles | async\" [value]=\"option\">\n                        {{option.nombre}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n\n        <div fxLayoutAlign=\"center\" style=\"margin-top:20px\">\n            <button style=\"width:90%\" mat-raised-button (click)=\"onSubmit()\" color=\"primary\">Guardar</button>\n        </div>\n\n    </form>\n</div>","import { Usuario } from './../../public/models/usuario.model';\nimport { Estado } from './../../commons/models/estado.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { HistoricoComprasModel } from \"../models/historico-compras.model\";\nimport { environment } from \"../../../environments/environment\";\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { Entidad } from \"../../commons/models/entidad.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  obtenerCompras(): Observable<Entidad<HistoricoComprasModel[]>> {\n    const url = `${environment.apiProveedorUrl}/obtenerCompras`;\n    return this.http.get<Entidad<HistoricoComprasModel[]>>(url)\n      .pipe(map(entidad => {\n        //Si arrojo un estado fallido retornamos error\n        if (!entidad || !entidad.estado || entidad.estado.exitoso !== true) {\n          throw new Error(entidad.estado.mensaje);\n        }\n        return entidad;\n      }));\n  }\n\n  entregarPedido(idCompra: number): Observable<Estado> {\n    const url = `${environment.apiProveedorUrl}/entregarPedido`;\n    return this.http.put<Estado>(url, { id: idCompra })\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  obtenerUsuarios(): Observable<Usuario[]> {\n    const url = `${environment.apiAdministradorUrl}/obtenerUsuarios`;\n    return this.http.get<Entidad<Usuario[]>>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || !data.estado || data.estado.exitoso !== true) {\n          throw new Error(data.estado.mensaje);\n        }\n        return data.entidad;\n      }));\n  }\n\n  actualizarPerfil(usuario: number, perfil: number): Observable<Estado> {\n    const url = `${environment.apiAdministradorUrl}/actualizarPerfil`;\n    return this.http.post<Estado>(url, {\n      idUsuario: usuario,\n      idPerfil: perfil\n    })\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  eliminarUsuario(idUsuario: number): Observable<Estado> {\n    const url = `${environment.apiAdministradorUrl}/inhabilitarUsuario/${idUsuario}`;\n    return this.http.delete<Estado>(url)\n      .pipe(map(data => {\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  habilitarUsuario(idUsuario: number): Observable<Estado> {\n    const url = `${environment.apiAdministradorUrl}/habilitarUsuario/${idUsuario}`;\n    return this.http.put<Estado>(url, {})\n      .pipe(map(data => {\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n}\n"]}