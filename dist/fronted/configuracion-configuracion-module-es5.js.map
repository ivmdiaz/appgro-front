{"version":3,"sources":["webpack:///src/app/commons/models/categoria.model.ts","webpack:///src/app/commons/models/tarifa.model.ts","webpack:///src/app/configuracion/components/categoria-dialog/categoria-dialog.component.ts","webpack:///src/app/configuracion/components/categoria-dialog/categoria-dialog.component.html","webpack:///src/app/configuracion/configuracion-routing.module.ts","webpack:///src/app/configuracion/components/tarifa-dialog/tarifa-dialog.component.ts","webpack:///src/app/configuracion/components/tarifa-dialog/tarifa-dialog.component.html","webpack:///src/app/configuracion/components/tarifas/tarifas.component.ts","webpack:///src/app/configuracion/components/tarifas/tarifas.component.html","webpack:///src/app/configuracion/components/categorias/categorias.component.ts","webpack:///src/app/configuracion/components/categorias/categorias.component.html","webpack:///src/app/configuracion/components/etiquetas/etiquetas.component.ts","webpack:///src/app/configuracion/components/etiquetas/etiquetas.component.html","webpack:///src/app/configuracion/configuracion.module.ts"],"names":["CategoriaModel","idCategoria","categoria","TarifaModel","rangoInicial","rangoFinal","idTarifa","tarifa","CategoriaDialogComponent","formBuilder","sanitizer","toastr","parametrizacionService","dialogo","data","initFormFields","imageBase64","imagen","form","group","controls","bypassSecurityTrustResourceUrl","event","target","files","reader","FileReader","readAsDataURL","onload","result","toString","replace","valid","peticion","value","guardarCategoria","subscribe","success","mensaje","close","error","onSelectFile","onSubmit","routes","path","component","canActivate","ConfiguracionRoutingModule","forChild","TarifaDialogComponent","required","f","TarifasComponent","dialog","dataSource","displayedColumns","consultaExitosa","obtenerFormatoTarifas","obtenerTarifas","forEach","ds","find","x","some","guardarTarifas","warning","push","mData","dialogRef","open","width","maxHeight","afterClosed","console","log","asignarTarifa","item","index","indexOf","CategoriasComponent","obtenerCategorias","configurarValidacionesFormulario","categoriaForm","filterValue","filter","trim","toLowerCase","paginator","firstPage","sort","confirmado","eliminarCategoria","editar","applyFilter","EtiquetasComponent","idSelect","obtenerEtiquetas","etiquetaForm","etiqueta","idEtiqueta","setValue","editElement","nativeElement","focus","eliminarEtiqueta","clearSeleccion","guardarEtiqueta","setErrors","ConfiguracionModule"],"mappings":"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","file":"configuracion-configuracion-module-es5.js","sourcesContent":["export class CategoriaModel {\n  idCategoria: number;\n  categoria: string;\n  imagen: string;\n\n  constructor(idCategoria: number, categoria: string) {\n    this.idCategoria = idCategoria;\n    this.categoria = categoria;\n  }\n\n}\n","export class TarifaModel {\n  idTarifa: number;\n  rangoInicial: number;\n  rangoFinal: number;\n  tarifa: number;\n\n  constructor(rangoInicial:number, rangoFinal:number){\n    this.idTarifa = null;\n    this.tarifa = null;\n    this.rangoInicial = rangoInicial;\n    this.rangoFinal = rangoFinal;\n  }\n\n}\n","import { CategoriaModel } from './../../../commons/models/categoria.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { ParametrizacionService } from 'src/app/commons/services/parametrizacion.service';\n\n@Component({\n  selector: 'app-categoria-dialog',\n  templateUrl: './categoria-dialog.component.html',\n  styleUrls: ['./categoria-dialog.component.scss']\n})\nexport class CategoriaDialogComponent implements OnInit {\n\n  //Formulario \n  form: FormGroup;\n\n  //VIEW: Imagen\n  imageBase64: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private sanitizer: DomSanitizer,\n    private toastr: ToastrService,\n    private parametrizacionService: ParametrizacionService,\n    public dialogo: MatDialogRef<CategoriaDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CategoriaModel\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormFields();\n  }\n\n  initFormFields(): void {\n    this.imageBase64 = this.data.imagen;\n    this.form = this.formBuilder.group({\n      categoria: [this.data.categoria,]\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  //VIEW ARCHIVO:\n  limpiarArchivo(): void {\n    this.imageBase64 = null;\n  }\n\n  transform() {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpeg;base64,' + this.imageBase64);\n  }\n\n  onSelectFile(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.imageBase64 = reader.result.toString().replace(/^data:(.*,)?/, '');\n      }\n    };\n  }\n\n  //SUBMIT FORMULARIO:\n\n  onSubmit(): void {\n    if (this.form.valid) {\n\n      const peticion: CategoriaModel = this.form.value;\n      peticion.idCategoria = this.data.idCategoria;\n      peticion.imagen = this.imageBase64;\n\n      this.parametrizacionService.guardarCategoria(peticion)\n        .subscribe(\n          data => {\n            this.toastr.success(data.mensaje);\n            this.dialogo.close({ data: true });\n          },\n          error => {\n            this.toastr.error(error);\n          }\n        );\n    }\n  }\n\n}\n","<div>\n\n    <div fxLayout=\"row\">\n        <h2>Editar categoria</h2>\n    </div>\n\n    <br />\n\n    <form [formGroup]=\"form\" autocomplete=\"off\">\n\n        <div fxLayoutAlign=\"center\" style=\"margin-bottom:20px\">\n\n            <div fxFlex=\"10%\" fxLayoutAlign=\"center\">\n                <input #file type='file' (change)=\"onSelectFile($event)\" accept=\"image/*\" style=\"display:none\">\n                <button mat-raised-button (click)=\"file.click()\" color=\"primary\">\n                    <mat-icon>add_a_photo</mat-icon>\n                </button>\n            </div>\n\n            <div fxFlex=\"10%\" fxLayoutAlign=\"center\" *ngIf=\"imageBase64\">\n                <button mat-raised-button color=\"accent\" (click)=\"limpiarArchivo()\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"image-cointaner\" fxLayoutAlign=\"center\" *ngIf=\"imageBase64\">\n            <img [src]=\"transform()\" />\n        </div>\n\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Nombre de categoria</mat-label>\n            <input formControlName=\"categoria\" matInput autocomplete=\"off\" type=\"text\">\n        </mat-form-field>\n\n        <br /><br />\n\n        <button mat-raised-button class=\"width-100\" (click)=\"onSubmit()\" color=\"primary\">\n            Guardar categoria\n        </button>\n\n    </form>\n\n</div>","import { AuthGuardAdm } from './../commons/helpers/auth.guard-adm';\nimport { TarifasComponent } from './components/tarifas/tarifas.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { AuthGuardPrv } from '../commons/helpers/auth.guard-prv';\nimport { EtiquetasComponent } from './components/etiquetas/etiquetas.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"etiquetas\",\n    component: EtiquetasComponent,\n    canActivate: [AuthGuardAdm]\n  },\n  {\n    path: \"categorias\",\n    component: CategoriasComponent,\n    canActivate: [AuthGuardAdm]\n  },\n  {\n    path: \"tarifas\",\n    component: TarifasComponent,\n    canActivate: [AuthGuardPrv]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfiguracionRoutingModule { }\n","import { TarifaModel } from './../../../commons/models/tarifa.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-tarifa-dialog',\n  templateUrl: './tarifa-dialog.component.html',\n  styleUrls: ['./tarifa-dialog.component.scss']\n})\nexport class TarifaDialogComponent implements OnInit {\n\n  //Formulario \n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogo: MatDialogRef<TarifaDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TarifaModel\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormFields();\n  }\n\n  initFormFields(): void {\n    this.form = this.formBuilder.group({\n      rangoInicial: [this.data.rangoInicial,],\n      rangoFinal: [this.data.rangoFinal,],\n      tarifa: [this.data.tarifa, Validators.required]\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      this.dialogo.close({ data: this.f.tarifa.value });\n    }\n  }\n}\n","<div>\n\n    <div fxLayout=\"row\">\n        <h2>Editar tarifa por flete</h2>\n    </div>\n\n    <br/>\n\n    <form [formGroup]=\"form\" autocomplete=\"off\">\n\n        <mat-form-field appearance=\"fill\" class=\"width-50\">\n            <mat-label>Desde (KM)</mat-label>\n            <input formControlName=\"rangoInicial\" matInput readonly>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-50 ml-2\">\n            <mat-label>Hasta(KM)</mat-label>\n            <input formControlName=\"rangoFinal\" matInput readonly>\n        </mat-form-field>\n\n        <br/>\n\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Valor de tarifa</mat-label>\n            <input formControlName=\"tarifa\" matInput autocomplete=\"off\" type=\"text\" pattern=\"\\d*\" maxlength=\"15\"\n                oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\">\n        </mat-form-field>\n\n        <br/><br/>\n\n        <button mat-raised-button class=\"width-100\" (click)=\"onSubmit()\" color=\"primary\">\n            Asignar tarifa\n        </button>\n\n    </form>\n\n</div>","import { MatDialog } from '@angular/material/dialog';\nimport { TarifaDialogComponent } from './../tarifa-dialog/tarifa-dialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TarifaModel } from './../../../commons/models/tarifa.model';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tarifas',\n  templateUrl: './tarifas.component.html',\n  styleUrls: ['./tarifas.component.scss', '../../../app.component.scss']\n})\nexport class TarifasComponent implements OnInit {\n\n  //VIEW TABLA:\n  consultaExitosa: boolean;\n  dataSource: TarifaModel[] = [];\n  displayedColumns = ['tarifa', 'rangoInicial', 'rangoFinal', 'acciones'];\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n    this.consultaExitosa = false;\n  }\n\n  ngOnInit(): void {\n    this.obtenerFormatoTarifas();\n    this.obtenerTarifas();\n  }\n\n  obtenerTarifas() {\n    this.parametrizacionService.obtenerTarifas()\n      .subscribe(\n        data => {\n          this.dataSource.forEach(ds => {\n            const tarifa = data.find(x => x.rangoInicial == ds.rangoInicial)\n            if (tarifa) {\n              ds.idTarifa = tarifa.idTarifa;\n              ds.tarifa = tarifa.tarifa;\n              ds.rangoInicial = tarifa.rangoInicial;\n              ds.rangoFinal = tarifa.rangoFinal;\n            }\n          });\n          this.consultaExitosa = true;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  guadarTarifas(): void {\n    if (this.dataSource && !this.dataSource.some(x => x.tarifa === null)) {\n      this.parametrizacionService.guardarTarifas(this.dataSource)\n        .subscribe(\n          data => {\n            this.toastr.success(data.mensaje);\n          },\n          error => {\n            this.toastr.error(error);\n          }\n        );\n    }\n    else {\n      this.toastr.warning(\"Debe diligenciar las tarifas para todos los rangos.\", \"Alerta\");\n    }\n  }\n\n  obtenerFormatoTarifas() {\n    this.dataSource.push(new TarifaModel(0, 5));\n    this.dataSource.push(new TarifaModel(5, 10));\n    this.dataSource.push(new TarifaModel(10, 20));\n    this.dataSource.push(new TarifaModel(20, 40));\n    this.dataSource.push(new TarifaModel(40, null));\n  }\n\n  openDialogEditar(mData: TarifaModel): void {\n    const dialogRef = this.dialog.open(TarifaDialogComponent, {\n      width: '90vh',\n      maxHeight: '90vh',\n      data: mData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result && result.data) {\n        mData.tarifa = result.data;\n        this.asignarTarifa(mData);\n      }\n    });\n  }\n\n  asignarTarifa(mData: TarifaModel) {\n    const item = this.dataSource.find(x => x.rangoInicial == mData.rangoInicial);\n    if (item) {\n      const index = this.dataSource.indexOf(item);\n      this.dataSource[index] = mData;\n    }\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\" *ngIf=\"consultaExitosa\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de tarifas por fletes</h2>\n    </div>\n\n    <div fxLayout=\"row\">\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- tarifa Column -->\n            <ng-container matColumnDef=\"tarifa\">\n                <th mat-header-cell *matHeaderCellDef> Tarifa.</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tarifa | currency}} </td>\n            </ng-container>\n\n            <!-- rangoInicial Column -->\n            <ng-container matColumnDef=\"rangoInicial\">\n                <th mat-header-cell *matHeaderCellDef> Desde (km)</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rangoInicial}} </td>\n            </ng-container>\n\n            <!-- rangoFinal Column -->\n            <ng-container matColumnDef=\"rangoFinal\">\n                <th mat-header-cell *matHeaderCellDef> Hasta (km)</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rangoFinal}} </td>\n            </ng-container>\n\n            <!-- acciones Column -->\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-button (click)=\"openDialogEditar(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row\n                [ngClass]=\"{'highlight': select?.rangoInicial === row.rangoInicial}\">\n\n                <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"8\">No tiene tarifas configuradas hasta el momento</td>\n            </tr>\n\n        </table>\n\n    </div>\n\n    <div fxLayout=\"row\" [style.margin-top]=\"'10px'\">\n        <p>Nota: Debe dilegenciar todas las tarifas. Si decide no cobrar en un rango de KMs, debe asignarle una tarifa con el valor de cero ($0)\n        </p>\n    </div>\n\n    <div fxLayout=\"row\" [style.margin-top]=\"'10px'\">\n        <button mat-raised-button color=\"primary\" (click)=\"guadarTarifas()\">Guardar tarifas</button>\n    </div>\n\n\n</div>","import { CategoriaDialogComponent } from './../categoria-dialog/categoria-dialog.component';\nimport { ConfirmDialogComponent } from './../../../commons/components/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CategoriaModel } from './../../../commons/models/categoria.model';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-categorias',\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.scss', '../../../app.component.scss']\n})\nexport class CategoriasComponent implements OnInit {\n\n  categoriaForm: FormGroup;\n\n  dataSource: MatTableDataSource<CategoriaModel>;\n  displayedColumns = ['id', 'nombre', 'acciones'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.obtenerCategorias();\n    this.configurarValidacionesFormulario();\n  }\n\n  private configurarValidacionesFormulario() {\n    this.categoriaForm = this.formBuilder.group({\n      categoria: [, Validators.required]\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obtenerCategorias() {\n    this.parametrizacionService.obtenerCategorias()\n      .subscribe(\n        data => {\n          this.dataSource = new MatTableDataSource(data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  editar(mData: CategoriaModel): void {\n    if (!mData) {\n      mData = new CategoriaModel(null, null);\n    }\n    const dialogRef = this.dialog.open(CategoriaDialogComponent, {\n      width: '90vh',\n      maxHeight: '90vh',\n      data: mData\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result && result.data) {\n        this.obtenerCategorias();\n      }\n    });\n  }\n\n  get f() {\n    return this.categoriaForm.controls;\n  }\n\n  eliminar(item: CategoriaModel) {\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de eliminar la categoria (${item.categoria})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.parametrizacionService.eliminarCategoria(item.idCategoria)\n            .subscribe(\n              data => {\n                this.obtenerCategorias();\n                this.toastr.success(data.mensaje);\n              },\n              error => {\n                this.toastr.error(error);\n              }\n            );\n        }\n      });\n  }\n\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de Categorias</h2>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"12px\" [style.margin-bottom]=\"'12px'\">\n        <button mat-raised-button color=\"primary\" (click)=\"editar(null)\"> Nueva Categoria</button>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n        <div fxLayout=\"column\" fxFlex>\n            <mat-form-field>\n                <mat-label>Filtro</mat-label>\n                <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Papa Pastusa\"\n                    #input>\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n            <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n\n    </div>\n\n    <div fxLayout=\"row\">\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- id Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> Id.</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.idCategoria}} </td>\n            </ng-container>\n\n            <!-- nombre Column -->\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef> Nombre</th>\n                <td mat-cell *matCellDef=\"let element\"> {{ (element.categoria.length>50)? (element.categoria |\n                    slice:0:50)+'...':(element.categoria) }} </td>\n            </ng-container>\n\n            <!-- imagen Column -->\n\n\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-button (click)=\"editar(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                    <button mat-button (click)=\"eliminar(element)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row>\n            </tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"3\">No tiene categorias registradas hasta el momento</td>\n            </tr>\n\n        </table>\n\n    </div>\n\n</div>","import { ConfirmDialogComponent } from './../../../commons/components/confirm-dialog/confirm-dialog.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ToastrService } from 'ngx-toastr';\nimport { Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EtiquetaModel } from './../../../commons/models/etiqueta.model';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-etiquetas',\n  templateUrl: './etiquetas.component.html',\n  styleUrls: ['./etiquetas.component.scss', '../../../app.component.scss']\n})\nexport class EtiquetasComponent implements OnInit {\n\n  etiquetaForm: FormGroup;\n\n  dataSource: MatTableDataSource<EtiquetaModel>;\n  displayedColumns = ['id', 'nombre', 'fecha', 'acciones'];\n\n  idSelect: Number = null;\n\n  @ViewChild('editEtiqueta') editElement: ElementRef;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.obtenerEtiquetas();\n    this.configurarValidacionesFormulario();\n  }\n\n  private configurarValidacionesFormulario() {\n    this.etiquetaForm = this.formBuilder.group({\n      etiqueta: [, Validators.required]\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obtenerEtiquetas() {\n    this.parametrizacionService.obtenerEtiquetas()\n      .subscribe(\n        data => {\n          this.dataSource = new MatTableDataSource(data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  editarEtiqueta(mData: EtiquetaModel): void {\n    this.idSelect = mData.idEtiqueta;\n    this.f.etiqueta.setValue(mData.etiqueta);\n    this.editElement.nativeElement.focus();\n  }\n\n  get f() {\n    return this.etiquetaForm.controls;\n  }\n\n  eliminarEtiqueta(item: EtiquetaModel) {\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de eliminar la etiqueta (${item.etiqueta})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.parametrizacionService.eliminarEtiqueta(item.idEtiqueta)\n            .subscribe(\n              data => {\n                this.toastr.success(data.mensaje);\n                this.obtenerEtiquetas();\n              },\n              error => {\n                this.toastr.error(error);\n              }\n            );\n          this.clearSeleccion();\n        }\n      });\n  }\n\n  guardarEtiqueta(): void {\n    this.parametrizacionService.guardarEtiqueta(this.f.etiqueta.value, this.idSelect)\n      .subscribe(\n        data => {\n          this.toastr.success(data.mensaje);\n          this.obtenerEtiquetas();\n        },\n        error => {\n          this.toastr.error(error);\n        }\n      );\n\n    this.clearSeleccion();\n  }\n\n  clearSeleccion(): void {\n    this.idSelect = null;\n    this.f.etiqueta.setValue('');\n    this.f.etiqueta.setErrors(null);\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de Etiquetas</h2>\n    </div>\n\n\n    <form [formGroup]=\"etiquetaForm\" style=\"margin-top:10px\" autocomplete=\"off\">\n\n        <div fxLayout=\"row\" fxLayoutGap=\"12px\" [style.margin-bottom]=\"'12px'\">\n            <div class=\"child-1\">\n                <mat-form-field>\n                    <mat-label>Etiqueta</mat-label>\n                    <input formControlName=\"etiqueta\" matInput #editEtiqueta maxlength=\"50\">\n                    <button mat-button matSuffix mat-icon-button (click)=\"clearSeleccion()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"f.etiqueta?.errors?.required\">Etiqueta es un campo requerido\"</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"child-2\">\n                <button mat-raised-button color=\"primary\" (click)=\"guardarEtiqueta()\">Guardar Etiqueta</button>\n            </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n            <div fxLayout=\"column\" fxFlex>\n                <mat-form-field>\n                    <mat-label>Filtro</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Papa Pastusa\"\n                        #input>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n                <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n            </div>\n\n        </div>\n\n        <div fxLayout=\"row\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef> Id.</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.idEtiqueta}} </td>\n                </ng-container>\n\n                <!-- nombre Column -->\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef> Nombre</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ (element.etiqueta.length>50)? (element.etiqueta |\n                        slice:0:50)+'...':(element.etiqueta) }} </td>\n                </ng-container>\n\n                <!-- fecha Column -->\n                <ng-container matColumnDef=\"fecha\">\n                    <th mat-header-cell *matHeaderCellDef> Fecha</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.regDate | date:\"MM/dd/yy HH:mm\"}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"acciones\">\n                    <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <button mat-button (click)=\"editarEtiqueta(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-button (click)=\"eliminarEtiqueta(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row\n                    [ngClass]=\"{'highlight': idSelect === row.idEtiqueta}\">\n                </tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No tiene etiquetas registradas hasta el momento</td>\n                </tr>\n\n            </table>\n\n\n        </div>\n\n    </form>\n</div>","import { MaterialModule } from './../material/material.module';\nimport { CommonsModule } from './../commons/commons.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfiguracionRoutingModule } from './configuracion-routing.module';\nimport { EtiquetasComponent } from './components/etiquetas/etiquetas.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { TarifasComponent } from './components/tarifas/tarifas.component';\nimport { TarifaDialogComponent } from './components/tarifa-dialog/tarifa-dialog.component';\nimport { CategoriaDialogComponent } from './components/categoria-dialog/categoria-dialog.component';\n\n\n@NgModule({\n  declarations: [EtiquetasComponent, CategoriasComponent, TarifasComponent, TarifaDialogComponent, CategoriaDialogComponent],\n  imports: [\n    CommonModule,\n    CommonsModule,\n    ConfiguracionRoutingModule,\n    MaterialModule\n  ]\n})\nexport class ConfiguracionModule { }\n"]}