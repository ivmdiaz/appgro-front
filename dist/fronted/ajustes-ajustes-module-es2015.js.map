{"version":3,"sources":["./src/app/ajustes/ajustes-routing.module.ts","./src/app/ajustes/ajustes.module.ts","./src/app/ajustes/components/perfil/perfil.component.ts","./src/app/ajustes/components/perfil/perfil.component.html","./src/app/ajustes/services/usuario.service.ts"],"names":[],"mappings":"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","file":"ajustes-ajustes-module-es2015.js","sourcesContent":["import { AuthGuard } from './../commons/helpers/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PerfilComponent} from \"./components/perfil/perfil.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PerfilComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AjustesRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AjustesRoutingModule} from './ajustes-routing.module';\nimport {PerfilComponent} from './components/perfil/perfil.component';\nimport {CommonsModule} from \"../commons/commons.module\";\nimport {MaterialModule} from \"../material/material.module\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [PerfilComponent],\n  imports: [\n    CommonModule,\n    AjustesRoutingModule,\n    CommonsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AjustesModule {\n}\n","import { ToastrService } from 'ngx-toastr';\nimport {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MustMatch} from \"../../../commons/validators/must-match.validator\";\nimport {RegistroPeticion} from \"../../../commons/models/registro-peticion.model\";\nimport {AuthenticationService} from \"../../../commons/services/authentication.service\";\nimport {UsuarioService} from \"../../services/usuario.service\";\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n\n  perfilForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private usuarioService: UsuarioService,\n    private toastr: ToastrService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    const usuario = this.authenticationService.currentUserValue.entidad.usuario;\n    this.perfilForm = this.formBuilder.group({\n      nombreCompleto: [usuario.nombreCompleto, Validators.required],\n      primerApellido: [usuario.primerApellido, Validators.required],\n      segundoApellido: [usuario.segundoApellido,Validators.required],\n      correo: [usuario.correo, [Validators.required, Validators.email]],\n      celular: [usuario.celular, [Validators.required]],\n      contrasena: ['', Validators.minLength(6)],\n      confirmarContrasena: ['',]\n    }, {\n      validator: MustMatch('contrasena', 'confirmarContrasena')\n    });\n  }\n\n  get f() {\n    return this.perfilForm.controls;\n  }\n\n  onSubmit() {\n\n    // stop here if form is invalid\n    if (this.perfilForm.invalid) {\n      return;\n    }\n\n    //Definimos petición y consumimos el ws:\n    const peticion = new RegistroPeticion(this.perfilForm.value);\n\n\n    this.usuarioService.actualizarDatos(peticion).subscribe(\n      respuesta => {\n        this.authenticationService.actualizarCurrentUser(this.perfilForm.value);\n        this.toastr.success(respuesta.mensaje);\n      },\n      error => {\n        this.toastr.error(error);\n      }\n    );\n  }\n\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"example-container\">\n\n  <div class=\"width-100\">\n    <h1>Datos de usuario</h1>\n  </div>\n\n  <br />\n\n  <form [formGroup]=\"perfilForm\" class=\"example-form\" autocomplete=\"off\">\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Nombres</mat-label>\n      <input matInput placeholder=\"Nombres\" formControlName=\"nombreCompleto\" maxlength=\"100\">\n      <mat-error *ngIf=\"f.nombreCompleto.errors?.required\">Nombres es un campo requerido\"</mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Primer Apellido</mat-label>\n      <input matInput placeholder=\"Primer Apellido\" formControlName=\"primerApellido\" maxlength=\"50\">\n      <mat-error *ngIf=\"f.primerApellido.errors?.required\">Primer Apellido es un campo requerido\"</mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Segundo Apellido</mat-label>\n      <input matInput placeholder=\"Segundo Apellido\" formControlName=\"segundoApellido\" maxlength=\"50\">\n      <mat-error *ngIf=\"f.segundoApellido.errors?.required\">Segundo Apellido es un campo requerido\"</mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Celular</mat-label>\n      <input matInput placeholder=\"Celular\" formControlName=\"celular\" maxlength=\"30\">\n      <mat-error *ngIf=\"f.celular.errors?.required\">Celular es un campo requerido\"</mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Correo Electrónico</mat-label>\n      <input type=\"email\" matInput placeholder=\"Correo Electrónico\" formControlName=\"correo\" [readonly]=\"true\">\n      <mat-error *ngIf=\"f.correo.errors?.required\">Correo Electrónico es un campo requerido\"</mat-error>\n      <mat-error *ngIf=\"f.correo.errors?.email\">Correo Electrónico inválido\"</mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Contraseña (Opcional)</mat-label>\n      <input matInput placeholder=\"Contraseña (Opcional)\" formControlName=\"contrasena\" type=\"password\" \n      autocomplete=\"off\" maxlength=\"100\"/>\n      <mat-error *ngIf=\"f.contrasena.errors?.minlength\">La contraseña debe tener al menos 6 caracteres\n      </mat-error>\n    </mat-form-field>\n\n    <br />\n\n    <mat-form-field appearance=\"fill\" class=\"width-100\">\n      <mat-label>Confirmar Contraseña (Opcional)</mat-label>\n      <input matInput placeholder=\"Confirmar Contraseña (Opcional)\" formControlName=\"confirmarContrasena\" type=\"password\" \n      autocomplete=\"off\" maxlength=\"100\"/>\n      <mat-error *ngIf=\"f.confirmarContrasena.errors?.mustMatch\">Las contraseñas deben coincidir</mat-error>\n    </mat-form-field>\n\n    <br /><br />\n\n    <button mat-raised-button class=\"width-100\" (click)=\"onSubmit()\" color=\"primary\">Actualizar Datos</button>\n\n  </form>\n</div>","import {Injectable} from '@angular/core';\nimport {environment} from \"../../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Estado} from \"../../commons/models/estado.model\";\nimport {RegistroPeticion} from \"../../commons/models/registro-peticion.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  actualizarDatos(peticion: RegistroPeticion) {\n    const url = `${environment.apiUsuarioUrl}/actualizarDatos`;\n    return this.http.put<Estado>(url, peticion)\n      .pipe(map(estado => {\n        //Si arrojo un estado fallido retornamos error\n        if (!estado || estado.exitoso !== true) {\n          throw new Error(estado.mensaje);\n        }\n        return estado;\n      }));\n  }\n}\n"],"sourceRoot":"webpack:///"}