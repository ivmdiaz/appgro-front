{"version":3,"sources":["./src/app/commons/models/registro-peticion.model.ts","./src/app/commons/services/parametrizacion.service.ts","./src/app/commons/validators/required-match.validator.ts","./src/app/commons/validators/must-match.validator.ts","./src/app/commons/helpers/auth.guard.ts","./src/app/commons/helpers/auth.guard-prv.ts","./src/app/commons/helpers/auth.guard-adm.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["export class RegistroPeticion {\n  nombreCompleto: string;\n  primerApellido: string;\n  segundoApellido: string;\n  correo: string;\n  celular: string;\n  contrasena: string;\n\n  public constructor(init?: Partial<RegistroPeticion>) {\n    Object.assign(this, init);\n  }\n}\n","import { Estado } from './../models/estado.model';\nimport { TarifaModel } from './../models/tarifa.model';\nimport { EtiquetaModel } from './../models/etiqueta.model';\nimport { CategoriaModel } from './../models/categoria.model';\nimport { NombreIdModel } from './../models/nombre-id.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Entidad } from '../models/entidad.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParametrizacionService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  obtenerDepartamentos(idPais: number): Observable<NombreIdModel[]> {\n    const url = `${environment.apiParametrizacionUrl}/obtenerDepartamentosPorPais/${idPais}`;\n    return this.http.get<Entidad<NombreIdModel[]>>(url)\n      .pipe(map(entidad => {\n        //Si arrojo un estado fallido retornamos error\n        if (!entidad || !entidad.estado || entidad.estado.exitoso !== true) {\n          throw new Error(entidad.estado.mensaje);\n        }\n        return entidad.entidad;\n      }));\n  }\n\n  obtenerCiudades(idDepartamento: number): Observable<NombreIdModel[]> {\n    const url = `${environment.apiParametrizacionUrl}/obtenerCiudadesPorDepartamento/${idDepartamento}`;\n    return this.http.get<Entidad<NombreIdModel[]>>(url)\n      .pipe(map(entidad => {\n        //Si arrojo un estado fallido retornamos error\n        if (!entidad || !entidad.estado || entidad.estado.exitoso !== true) {\n          throw new Error(entidad.estado.mensaje);\n        }\n        return entidad.entidad;\n      }));\n  }\n\n  obtenerCategorias(): Observable<CategoriaModel[]> {\n    const url = `${environment.apiCategoriaUrl}/obtenerCategorias`;\n    return this.http.get<Entidad<CategoriaModel[]>>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || !data.estado || data.estado.exitoso !== true) {\n          throw new Error(data.estado.mensaje);\n        }\n        return data.entidad;\n      }));\n  }\n\n  obtenerEtiquetas(): Observable<EtiquetaModel[]> {\n    const url = `${environment.apiEtiquetaUrl}/obtenerEtiquetas`;\n    return this.http.get<Entidad<EtiquetaModel[]>>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || !data.estado || data.estado.exitoso !== true) {\n          throw new Error(data.estado.mensaje);\n        }\n        return data.entidad;\n      }));\n  }\n\n  obtenerTarifas(): Observable<TarifaModel[]> {\n    const url = `${environment.apiProveedorUrl}/obtenerTarifas`;\n    return this.http.get<Entidad<TarifaModel[]>>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || !data.estado || data.estado.exitoso !== true) {\n          throw new Error(data.estado.mensaje);\n        }\n        return data.entidad;\n      }));\n  }\n\n  guardarEtiqueta(etiqueta: string, id: Number): Observable<Estado> {\n    const url = `${environment.apiEtiquetaUrl}/guardar`;\n    return this.http.put<Estado>(url, {id:id, nombre:etiqueta})\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  guardarCategoria(categoria : CategoriaModel): Observable<Estado> {\n    const url = `${environment.apiCategoriaUrl}/guardar`;\n    return this.http.put<Estado>(url, categoria)\n      .pipe(map(data => {\n       //Si arrojo un estado fallido retornamos error\n       if (!data || data.exitoso !== true) {\n        throw new Error(data.mensaje);\n      }\n      return data;\n      }));\n  }\n\n  guardarTarifas(peticion: TarifaModel[]): Observable<Estado> {\n    const url = `${environment.apiProveedorUrl}/guardarTarifas`;\n    return this.http.post<Estado>(url, {tarifas:peticion})\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  eliminarEtiqueta(idEtiqueta: Number): Observable<Estado> {\n    const url = `${environment.apiEtiquetaUrl}/eliminar/${idEtiqueta}`;\n    return this.http.delete<Estado>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n\n  eliminarCategoria(idCategoria: Number): Observable<Estado> {\n    const url = `${environment.apiCategoriaUrl}/eliminar/${idCategoria}`;\n    return this.http.delete<Estado>(url)\n      .pipe(map(data => {\n        //Si arrojo un estado fallido retornamos error\n        if (!data || data.exitoso !== true) {\n          throw new Error(data.mensaje);\n        }\n        return data;\n      }));\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\nexport function RequiredMatch(control: AbstractControl) {\n    const selection: any = control.value;\n    if (typeof selection === 'string') {\n        return { incorrect: true };\n    }\n    return null;\n}","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/home'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import { ConstantesUtil } from './constantes-util';\nimport {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuardPrv implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    const perfiles = this.authenticationService.perfiles;\n    if (currentUser && perfiles && perfiles.indexOf(ConstantesUtil.PERFIL_PROVEEDOR) !== -1) {\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/home'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import { ConstantesUtil } from './constantes-util';\nimport {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuardAdm implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    const perfiles = this.authenticationService.perfiles;\n    if (currentUser && perfiles && perfiles.indexOf(ConstantesUtil.PERFIL_ADMINISTRADOR) !== -1) {\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/home'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n"],"sourceRoot":"webpack:///"}