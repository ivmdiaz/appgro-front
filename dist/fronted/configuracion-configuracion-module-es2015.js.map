{"version":3,"sources":["./src/app/commons/models/categoria.model.ts","./src/app/commons/models/tarifa.model.ts","./src/app/configuracion/components/categoria-dialog/categoria-dialog.component.ts","./src/app/configuracion/components/categoria-dialog/categoria-dialog.component.html","./src/app/configuracion/configuracion-routing.module.ts","./src/app/configuracion/components/tarifa-dialog/tarifa-dialog.component.ts","./src/app/configuracion/components/tarifa-dialog/tarifa-dialog.component.html","./src/app/configuracion/components/tarifas/tarifas.component.ts","./src/app/configuracion/components/tarifas/tarifas.component.html","./src/app/configuracion/components/categorias/categorias.component.ts","./src/app/configuracion/components/categorias/categorias.component.html","./src/app/configuracion/components/etiquetas/etiquetas.component.ts","./src/app/configuracion/components/etiquetas/etiquetas.component.html","./src/app/configuracion/configuracion.module.ts"],"names":[],"mappings":"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","file":"configuracion-configuracion-module-es2015.js","sourcesContent":["export class CategoriaModel {\n  idCategoria: number;\n  categoria: string;\n  imagen: string;\n\n  constructor(idCategoria: number, categoria: string) {\n    this.idCategoria = idCategoria;\n    this.categoria = categoria;\n  }\n\n}\n","export class TarifaModel {\n  idTarifa: number;\n  rangoInicial: number;\n  rangoFinal: number;\n  tarifa: number;\n\n  constructor(rangoInicial:number, rangoFinal:number){\n    this.idTarifa = null;\n    this.tarifa = null;\n    this.rangoInicial = rangoInicial;\n    this.rangoFinal = rangoFinal;\n  }\n\n}\n","import { CategoriaModel } from './../../../commons/models/categoria.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ToastrService } from 'ngx-toastr';\nimport { ParametrizacionService } from 'src/app/commons/services/parametrizacion.service';\n\n@Component({\n  selector: 'app-categoria-dialog',\n  templateUrl: './categoria-dialog.component.html',\n  styleUrls: ['./categoria-dialog.component.scss']\n})\nexport class CategoriaDialogComponent implements OnInit {\n\n  //Formulario \n  form: FormGroup;\n\n  //VIEW: Imagen\n  imageBase64: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private sanitizer: DomSanitizer,\n    private toastr: ToastrService,\n    private parametrizacionService: ParametrizacionService,\n    public dialogo: MatDialogRef<CategoriaDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CategoriaModel\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormFields();\n  }\n\n  initFormFields(): void {\n    this.imageBase64 = this.data.imagen;\n    this.form = this.formBuilder.group({\n      categoria: [this.data.categoria,]\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  //VIEW ARCHIVO:\n  limpiarArchivo(): void {\n    this.imageBase64 = null;\n  }\n\n  transform() {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpeg;base64,' + this.imageBase64);\n  }\n\n  onSelectFile(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.imageBase64 = reader.result.toString().replace(/^data:(.*,)?/, '');\n      }\n    };\n  }\n\n  //SUBMIT FORMULARIO:\n\n  onSubmit(): void {\n    if (this.form.valid) {\n\n      const peticion: CategoriaModel = this.form.value;\n      peticion.idCategoria = this.data.idCategoria;\n      peticion.imagen = this.imageBase64;\n\n      this.parametrizacionService.guardarCategoria(peticion)\n        .subscribe(\n          data => {\n            this.toastr.success(data.mensaje);\n            this.dialogo.close({ data: true });\n          },\n          error => {\n            this.toastr.error(error);\n          }\n        );\n    }\n  }\n\n}\n","<div>\n\n    <div fxLayout=\"row\">\n        <h2>Editar categoria</h2>\n    </div>\n\n    <br />\n\n    <form [formGroup]=\"form\" autocomplete=\"off\">\n\n        <div fxLayoutAlign=\"center\" style=\"margin-bottom:20px\">\n\n            <div fxFlex=\"10%\" fxLayoutAlign=\"center\">\n                <input #file type='file' (change)=\"onSelectFile($event)\" accept=\"image/*\" style=\"display:none\">\n                <button mat-raised-button (click)=\"file.click()\" color=\"primary\">\n                    <mat-icon>add_a_photo</mat-icon>\n                </button>\n            </div>\n\n            <div fxFlex=\"10%\" fxLayoutAlign=\"center\" *ngIf=\"imageBase64\">\n                <button mat-raised-button color=\"accent\" (click)=\"limpiarArchivo()\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"image-cointaner\" fxLayoutAlign=\"center\" *ngIf=\"imageBase64\">\n            <img [src]=\"transform()\" />\n        </div>\n\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Nombre de categoria</mat-label>\n            <input formControlName=\"categoria\" matInput autocomplete=\"off\" type=\"text\">\n        </mat-form-field>\n\n        <br /><br />\n\n        <button mat-raised-button class=\"width-100\" (click)=\"onSubmit()\" color=\"primary\">\n            Guardar categoria\n        </button>\n\n    </form>\n\n</div>","import { AuthGuardAdm } from './../commons/helpers/auth.guard-adm';\nimport { TarifasComponent } from './components/tarifas/tarifas.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { AuthGuardPrv } from '../commons/helpers/auth.guard-prv';\nimport { EtiquetasComponent } from './components/etiquetas/etiquetas.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: \"etiquetas\",\n    component: EtiquetasComponent,\n    canActivate: [AuthGuardAdm]\n  },\n  {\n    path: \"categorias\",\n    component: CategoriasComponent,\n    canActivate: [AuthGuardAdm]\n  },\n  {\n    path: \"tarifas\",\n    component: TarifasComponent,\n    canActivate: [AuthGuardPrv]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConfiguracionRoutingModule { }\n","import { TarifaModel } from './../../../commons/models/tarifa.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-tarifa-dialog',\n  templateUrl: './tarifa-dialog.component.html',\n  styleUrls: ['./tarifa-dialog.component.scss']\n})\nexport class TarifaDialogComponent implements OnInit {\n\n  //Formulario \n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogo: MatDialogRef<TarifaDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TarifaModel\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormFields();\n  }\n\n  initFormFields(): void {\n    this.form = this.formBuilder.group({\n      rangoInicial: [this.data.rangoInicial,],\n      rangoFinal: [this.data.rangoFinal,],\n      tarifa: [this.data.tarifa, Validators.required]\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      this.dialogo.close({ data: this.f.tarifa.value });\n    }\n  }\n}\n","<div>\n\n    <div fxLayout=\"row\">\n        <h2>Editar tarifa por flete</h2>\n    </div>\n\n    <br/>\n\n    <form [formGroup]=\"form\" autocomplete=\"off\">\n\n        <mat-form-field appearance=\"fill\" class=\"width-50\">\n            <mat-label>Desde (KM)</mat-label>\n            <input formControlName=\"rangoInicial\" matInput readonly>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"width-50 ml-2\">\n            <mat-label>Hasta(KM)</mat-label>\n            <input formControlName=\"rangoFinal\" matInput readonly>\n        </mat-form-field>\n\n        <br/>\n\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\n            <mat-label>Valor de tarifa</mat-label>\n            <input formControlName=\"tarifa\" matInput autocomplete=\"off\" type=\"text\" pattern=\"\\d*\" maxlength=\"15\"\n                oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\">\n        </mat-form-field>\n\n        <br/><br/>\n\n        <button mat-raised-button class=\"width-100\" (click)=\"onSubmit()\" color=\"primary\">\n            Asignar tarifa\n        </button>\n\n    </form>\n\n</div>","import { MatDialog } from '@angular/material/dialog';\nimport { TarifaDialogComponent } from './../tarifa-dialog/tarifa-dialog.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TarifaModel } from './../../../commons/models/tarifa.model';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tarifas',\n  templateUrl: './tarifas.component.html',\n  styleUrls: ['./tarifas.component.scss', '../../../app.component.scss']\n})\nexport class TarifasComponent implements OnInit {\n\n  //VIEW TABLA:\n  consultaExitosa: boolean;\n  dataSource: TarifaModel[] = [];\n  displayedColumns = ['tarifa', 'rangoInicial', 'rangoFinal', 'acciones'];\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n    this.consultaExitosa = false;\n  }\n\n  ngOnInit(): void {\n    this.obtenerFormatoTarifas();\n    this.obtenerTarifas();\n  }\n\n  obtenerTarifas() {\n    this.parametrizacionService.obtenerTarifas()\n      .subscribe(\n        data => {\n          this.dataSource.forEach(ds => {\n            const tarifa = data.find(x => x.rangoInicial == ds.rangoInicial)\n            if (tarifa) {\n              ds.idTarifa = tarifa.idTarifa;\n              ds.tarifa = tarifa.tarifa;\n              ds.rangoInicial = tarifa.rangoInicial;\n              ds.rangoFinal = tarifa.rangoFinal;\n            }\n          });\n          this.consultaExitosa = true;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  guadarTarifas(): void {\n    if (this.dataSource && !this.dataSource.some(x => x.tarifa === null)) {\n      this.parametrizacionService.guardarTarifas(this.dataSource)\n        .subscribe(\n          data => {\n            this.toastr.success(data.mensaje);\n          },\n          error => {\n            this.toastr.error(error);\n          }\n        );\n    }\n    else {\n      this.toastr.warning(\"Debe diligenciar las tarifas para todos los rangos.\", \"Alerta\");\n    }\n  }\n\n  obtenerFormatoTarifas() {\n    this.dataSource.push(new TarifaModel(0, 5));\n    this.dataSource.push(new TarifaModel(5, 10));\n    this.dataSource.push(new TarifaModel(10, 20));\n    this.dataSource.push(new TarifaModel(20, 40));\n    this.dataSource.push(new TarifaModel(40, null));\n  }\n\n  openDialogEditar(mData: TarifaModel): void {\n    const dialogRef = this.dialog.open(TarifaDialogComponent, {\n      width: '90vh',\n      maxHeight: '90vh',\n      data: mData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result && result.data) {\n        mData.tarifa = result.data;\n        this.asignarTarifa(mData);\n      }\n    });\n  }\n\n  asignarTarifa(mData: TarifaModel) {\n    const item = this.dataSource.find(x => x.rangoInicial == mData.rangoInicial);\n    if (item) {\n      const index = this.dataSource.indexOf(item);\n      this.dataSource[index] = mData;\n    }\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\" *ngIf=\"consultaExitosa\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de tarifas por fletes</h2>\n    </div>\n\n    <div fxLayout=\"row\">\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- tarifa Column -->\n            <ng-container matColumnDef=\"tarifa\">\n                <th mat-header-cell *matHeaderCellDef> Tarifa.</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tarifa | currency}} </td>\n            </ng-container>\n\n            <!-- rangoInicial Column -->\n            <ng-container matColumnDef=\"rangoInicial\">\n                <th mat-header-cell *matHeaderCellDef> Desde (km)</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rangoInicial}} </td>\n            </ng-container>\n\n            <!-- rangoFinal Column -->\n            <ng-container matColumnDef=\"rangoFinal\">\n                <th mat-header-cell *matHeaderCellDef> Hasta (km)</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rangoFinal}} </td>\n            </ng-container>\n\n            <!-- acciones Column -->\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-button (click)=\"openDialogEditar(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row\n                [ngClass]=\"{'highlight': select?.rangoInicial === row.rangoInicial}\">\n\n                <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"8\">No tiene tarifas configuradas hasta el momento</td>\n            </tr>\n\n        </table>\n\n    </div>\n\n    <div fxLayout=\"row\" [style.margin-top]=\"'10px'\">\n        <p>Nota: Debe dilegenciar todas las tarifas. Si decide no cobrar en un rango de KMs, debe asignarle una tarifa con el valor de cero ($0)\n        </p>\n    </div>\n\n    <div fxLayout=\"row\" [style.margin-top]=\"'10px'\">\n        <button mat-raised-button color=\"primary\" (click)=\"guadarTarifas()\">Guardar tarifas</button>\n    </div>\n\n\n</div>","import { CategoriaDialogComponent } from './../categoria-dialog/categoria-dialog.component';\nimport { ConfirmDialogComponent } from './../../../commons/components/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CategoriaModel } from './../../../commons/models/categoria.model';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-categorias',\n  templateUrl: './categorias.component.html',\n  styleUrls: ['./categorias.component.scss', '../../../app.component.scss']\n})\nexport class CategoriasComponent implements OnInit {\n\n  categoriaForm: FormGroup;\n\n  dataSource: MatTableDataSource<CategoriaModel>;\n  displayedColumns = ['id', 'nombre', 'acciones'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.obtenerCategorias();\n    this.configurarValidacionesFormulario();\n  }\n\n  private configurarValidacionesFormulario() {\n    this.categoriaForm = this.formBuilder.group({\n      categoria: [, Validators.required]\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obtenerCategorias() {\n    this.parametrizacionService.obtenerCategorias()\n      .subscribe(\n        data => {\n          this.dataSource = new MatTableDataSource(data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  editar(mData: CategoriaModel): void {\n    if (!mData) {\n      mData = new CategoriaModel(null, null);\n    }\n    const dialogRef = this.dialog.open(CategoriaDialogComponent, {\n      width: '90vh',\n      maxHeight: '90vh',\n      data: mData\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result && result.data) {\n        this.obtenerCategorias();\n      }\n    });\n  }\n\n  get f() {\n    return this.categoriaForm.controls;\n  }\n\n  eliminar(item: CategoriaModel) {\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de eliminar la categoria (${item.categoria})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.parametrizacionService.eliminarCategoria(item.idCategoria)\n            .subscribe(\n              data => {\n                this.obtenerCategorias();\n                this.toastr.success(data.mensaje);\n              },\n              error => {\n                this.toastr.error(error);\n              }\n            );\n        }\n      });\n  }\n\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de Categorias</h2>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"12px\" [style.margin-bottom]=\"'12px'\">\n        <button mat-raised-button color=\"primary\" (click)=\"editar(null)\"> Nueva Categoria</button>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n        <div fxLayout=\"column\" fxFlex>\n            <mat-form-field>\n                <mat-label>Filtro</mat-label>\n                <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Papa Pastusa\"\n                    #input>\n            </mat-form-field>\n        </div>\n\n        <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n            <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n        </div>\n\n    </div>\n\n    <div fxLayout=\"row\">\n\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!-- id Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> Id.</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.idCategoria}} </td>\n            </ng-container>\n\n            <!-- nombre Column -->\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef> Nombre</th>\n                <td mat-cell *matCellDef=\"let element\"> {{ (element.categoria.length>50)? (element.categoria |\n                    slice:0:50)+'...':(element.categoria) }} </td>\n            </ng-container>\n\n            <!-- imagen Column -->\n\n\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-button (click)=\"editar(element)\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                    <button mat-button (click)=\"eliminar(element)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row>\n            </tr>\n\n            <!-- Row shown when there is no matching data. -->\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"3\">No tiene categorias registradas hasta el momento</td>\n            </tr>\n\n        </table>\n\n    </div>\n\n</div>","import { ConfirmDialogComponent } from './../../../commons/components/confirm-dialog/confirm-dialog.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ToastrService } from 'ngx-toastr';\nimport { Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { ParametrizacionService } from './../../../commons/services/parametrizacion.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EtiquetaModel } from './../../../commons/models/etiqueta.model';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-etiquetas',\n  templateUrl: './etiquetas.component.html',\n  styleUrls: ['./etiquetas.component.scss', '../../../app.component.scss']\n})\nexport class EtiquetasComponent implements OnInit {\n\n  etiquetaForm: FormGroup;\n\n  dataSource: MatTableDataSource<EtiquetaModel>;\n  displayedColumns = ['id', 'nombre', 'fecha', 'acciones'];\n\n  idSelect: Number = null;\n\n  @ViewChild('editEtiqueta') editElement: ElementRef;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private parametrizacionService: ParametrizacionService,\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.obtenerEtiquetas();\n    this.configurarValidacionesFormulario();\n  }\n\n  private configurarValidacionesFormulario() {\n    this.etiquetaForm = this.formBuilder.group({\n      etiqueta: [, Validators.required]\n    });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obtenerEtiquetas() {\n    this.parametrizacionService.obtenerEtiquetas()\n      .subscribe(\n        data => {\n          this.dataSource = new MatTableDataSource(data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        error => {\n          this.toastr.error(error);\n        });\n  }\n\n  editarEtiqueta(mData: EtiquetaModel): void {\n    this.idSelect = mData.idEtiqueta;\n    this.f.etiqueta.setValue(mData.etiqueta);\n    this.editElement.nativeElement.focus();\n  }\n\n  get f() {\n    return this.etiquetaForm.controls;\n  }\n\n  eliminarEtiqueta(item: EtiquetaModel) {\n    this.dialog\n      .open(ConfirmDialogComponent, {\n        data: `¿Está seguro de eliminar la etiqueta (${item.etiqueta})?`\n      })\n      .afterClosed()\n      .subscribe((confirmado: Boolean) => {\n        if (confirmado) {\n          this.parametrizacionService.eliminarEtiqueta(item.idEtiqueta)\n            .subscribe(\n              data => {\n                this.toastr.success(data.mensaje);\n                this.obtenerEtiquetas();\n              },\n              error => {\n                this.toastr.error(error);\n              }\n            );\n          this.clearSeleccion();\n        }\n      });\n  }\n\n  guardarEtiqueta(): void {\n    this.parametrizacionService.guardarEtiqueta(this.f.etiqueta.value, this.idSelect)\n      .subscribe(\n        data => {\n          this.toastr.success(data.mensaje);\n          this.obtenerEtiquetas();\n        },\n        error => {\n          this.toastr.error(error);\n        }\n      );\n\n    this.clearSeleccion();\n  }\n\n  clearSeleccion(): void {\n    this.idSelect = null;\n    this.f.etiqueta.setValue('');\n    this.f.etiqueta.setErrors(null);\n  }\n}\n","<app-header-principal></app-header-principal>\n\n<div class=\"container-main\">\n\n    <div fxLayout=\"row\">\n        <h2>Lista de Etiquetas</h2>\n    </div>\n\n\n    <form [formGroup]=\"etiquetaForm\" style=\"margin-top:10px\" autocomplete=\"off\">\n\n        <div fxLayout=\"row\" fxLayoutGap=\"12px\" [style.margin-bottom]=\"'12px'\">\n            <div class=\"child-1\">\n                <mat-form-field>\n                    <mat-label>Etiqueta</mat-label>\n                    <input formControlName=\"etiqueta\" matInput #editEtiqueta maxlength=\"50\">\n                    <button mat-button matSuffix mat-icon-button (click)=\"clearSeleccion()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"f.etiqueta?.errors?.required\">Etiqueta es un campo requerido\"</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"child-2\">\n                <button mat-raised-button color=\"primary\" (click)=\"guardarEtiqueta()\">Guardar Etiqueta</button>\n            </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutGap=\"30px\">\n\n            <div fxLayout=\"column\" fxFlex>\n                <mat-form-field>\n                    <mat-label>Filtro</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" autocomplete=\"off\" placeholder=\"Ejemplo. Papa Pastusa\"\n                        #input>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"end\">\n                <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n            </div>\n\n        </div>\n\n        <div fxLayout=\"row\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef> Id.</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.idEtiqueta}} </td>\n                </ng-container>\n\n                <!-- nombre Column -->\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef> Nombre</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ (element.etiqueta.length>50)? (element.etiqueta |\n                        slice:0:50)+'...':(element.etiqueta) }} </td>\n                </ng-container>\n\n                <!-- fecha Column -->\n                <ng-container matColumnDef=\"fecha\">\n                    <th mat-header-cell *matHeaderCellDef> Fecha</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.regDate | date:\"MM/dd/yy HH:mm\"}} </td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"acciones\">\n                    <th mat-header-cell *matHeaderCellDef> Acciones</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                        <button mat-button (click)=\"editarEtiqueta(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-button (click)=\"eliminarEtiqueta(element)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row\n                    [ngClass]=\"{'highlight': idSelect === row.idEtiqueta}\">\n                </tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No tiene etiquetas registradas hasta el momento</td>\n                </tr>\n\n            </table>\n\n\n        </div>\n\n    </form>\n</div>","import { MaterialModule } from './../material/material.module';\nimport { CommonsModule } from './../commons/commons.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfiguracionRoutingModule } from './configuracion-routing.module';\nimport { EtiquetasComponent } from './components/etiquetas/etiquetas.component';\nimport { CategoriasComponent } from './components/categorias/categorias.component';\nimport { TarifasComponent } from './components/tarifas/tarifas.component';\nimport { TarifaDialogComponent } from './components/tarifa-dialog/tarifa-dialog.component';\nimport { CategoriaDialogComponent } from './components/categoria-dialog/categoria-dialog.component';\n\n\n@NgModule({\n  declarations: [EtiquetasComponent, CategoriasComponent, TarifasComponent, TarifaDialogComponent, CategoriaDialogComponent],\n  imports: [\n    CommonModule,\n    CommonsModule,\n    ConfiguracionRoutingModule,\n    MaterialModule\n  ]\n})\nexport class ConfiguracionModule { }\n"],"sourceRoot":"webpack:///"}